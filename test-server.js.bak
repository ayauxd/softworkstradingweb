import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import fs from 'fs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
const PORT = 5001; // Use a different port

// Middleware to handle policy pages
app.use('/policies', (req, res, next) => {
  console.log(`Policy request received: ${req.path}`);
  // If it's a direct request for a policy HTML file
  if (req.path.endsWith('.html')) {
    const filePath = path.join(__dirname, 'dist', 'public', 'policies', path.basename(req.path));
    console.log(`Looking for policy file at: ${filePath}`);
    
    if (fs.existsSync(filePath)) {
      console.log(`Policy file found, sending: ${filePath}`);
      return res.sendFile(filePath);
    } else {
      console.log(`Policy file not found at: ${filePath}`);
    }
  }
  next();
});

// Serve static files from the dist/public directory
app.use(express.static(path.join(__dirname, 'dist', 'public')));

// Special handling for policy pages without .html extension
app.get('/policies/:policy', (req, res, next) => {
  console.log(`Clean policy URL request received: ${req.params.policy}`);
  const policyFile = `${req.params.policy}.html`;
  const filePath = path.join(__dirname, 'dist', 'public', 'policies', policyFile);
  console.log(`Looking for policy file at: ${filePath}`);
  
  if (fs.existsSync(filePath)) {
    console.log(`Policy file found, sending: ${filePath}`);
    return res.sendFile(filePath);
  } else {
    console.log(`Policy file not found at: ${filePath}`);
  }
  next();
});

// Serve the test-links.html file for the root route
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'dist', 'public', 'test-links.html'));
});

// Start the server
app.listen(PORT, () => {
  console.log(`Test server running on http://localhost:${PORT}`);
});
ENDOFFILE < /dev/null